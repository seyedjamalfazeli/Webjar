// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Webjar.Persistence;

#nullable disable

namespace Webjar.Persistence.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20240104110623_Update_ProductVariable_Discount")]
    partial class Update_ProductVariable_Discount
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Webjar.Domain.Accessory", b =>
                {
                    b.Property<int>("AccessoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessoryId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccessoryId");

                    b.ToTable("Accessories");

                    b.HasData(
                        new
                        {
                            AccessoryId = 1,
                            Amount = 15000m,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "بسته بندی ویژه هدیه"
                        },
                        new
                        {
                            AccessoryId = 2,
                            Amount = 30000m,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "کاور مخصوص لباس"
                        });
                });

            modelBuilder.Entity("Webjar.Domain.ColorVariable", b =>
                {
                    b.Property<int>("ColorVariableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorVariableId"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("HexCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ColorVariableId");

                    b.ToTable("ColorVariables");

                    b.HasData(
                        new
                        {
                            ColorVariableId = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HexCode = "FF0000",
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "قرمز"
                        },
                        new
                        {
                            ColorVariableId = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HexCode = "00FF00",
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "سبز"
                        },
                        new
                        {
                            ColorVariableId = 3,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HexCode = "0000FF",
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "آبی"
                        });
                });

            modelBuilder.Entity("Webjar.Domain.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Webjar.Domain.ProductVariable", b =>
                {
                    b.Property<int>("ProductVariableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductVariableId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ColorVariableId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DiscountExpireAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int");

                    b.Property<float>("DollarValue")
                        .HasColumnType("real");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SizeVariableId")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductVariableId");

                    b.HasIndex("ColorVariableId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SizeVariableId");

                    b.ToTable("ProductVariables");
                });

            modelBuilder.Entity("Webjar.Domain.ProductVariableAccessory", b =>
                {
                    b.Property<int>("ProductVariableAccessoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductVariableAccessoryId"));

                    b.Property<int>("AccessoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductVariableId")
                        .HasColumnType("int");

                    b.HasKey("ProductVariableAccessoryId");

                    b.HasIndex("AccessoryId");

                    b.HasIndex("ProductVariableId");

                    b.ToTable("ProductVariableAccessories");
                });

            modelBuilder.Entity("Webjar.Domain.SizeVariable", b =>
                {
                    b.Property<int>("SizeVariableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SizeVariableId"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SizeVariableId");

                    b.ToTable("SizeVariables");

                    b.HasData(
                        new
                        {
                            SizeVariableId = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "M"
                        },
                        new
                        {
                            SizeVariableId = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "L"
                        },
                        new
                        {
                            SizeVariableId = 3,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "XL"
                        });
                });

            modelBuilder.Entity("Webjar.Domain.ProductVariable", b =>
                {
                    b.HasOne("Webjar.Domain.ColorVariable", "ColorVariable")
                        .WithMany("ProductVariables")
                        .HasForeignKey("ColorVariableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Webjar.Domain.Product", "Product")
                        .WithMany("ProductVariables")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Webjar.Domain.SizeVariable", "SizeVariable")
                        .WithMany("ProductVariables")
                        .HasForeignKey("SizeVariableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ColorVariable");

                    b.Navigation("Product");

                    b.Navigation("SizeVariable");
                });

            modelBuilder.Entity("Webjar.Domain.ProductVariableAccessory", b =>
                {
                    b.HasOne("Webjar.Domain.Accessory", "Accessory")
                        .WithMany("ProductVariableAccessories")
                        .HasForeignKey("AccessoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Webjar.Domain.ProductVariable", "ProductVariable")
                        .WithMany("ProductVariableAccessories")
                        .HasForeignKey("ProductVariableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accessory");

                    b.Navigation("ProductVariable");
                });

            modelBuilder.Entity("Webjar.Domain.Accessory", b =>
                {
                    b.Navigation("ProductVariableAccessories");
                });

            modelBuilder.Entity("Webjar.Domain.ColorVariable", b =>
                {
                    b.Navigation("ProductVariables");
                });

            modelBuilder.Entity("Webjar.Domain.Product", b =>
                {
                    b.Navigation("ProductVariables");
                });

            modelBuilder.Entity("Webjar.Domain.ProductVariable", b =>
                {
                    b.Navigation("ProductVariableAccessories");
                });

            modelBuilder.Entity("Webjar.Domain.SizeVariable", b =>
                {
                    b.Navigation("ProductVariables");
                });
#pragma warning restore 612, 618
        }
    }
}
